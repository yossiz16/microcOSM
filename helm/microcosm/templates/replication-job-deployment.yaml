{{- if .Values.replicationJob.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-replication-job
  labels:
    app: {{ template "microcosm.name" . }}
    component: replication-job
    environment: {{ .Values.environment }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "microcosm.name" . }}
  template:
    metadata:
      labels:
        app: {{ template "microcosm.name" . }}
    spec:
      containers:
        - name: {{ .Release.Name }}-replication-job-deployment
          {{- if eq .Values.cloudProvider "aws" }} 
          image: "{{ .Values.replicationJob.image.aws }}"
          {{- end }}
          {{- if eq .Values.cloudProvider "minikube" }} 
          image: "{{ .Values.replicationJob.image.minikube }}"
          {{- end }}
          command: ['./start.sh']
          livenessProbe:
            exec:
              command:
              - pgrep
              - java
            initialDelaySeconds: 5
            periodSeconds: 15
          {{- if .Values.replicationJob.resources.enabled }}
          resources:
            requests:
              memory: {{ .Values.replicationJob.resources.requests.memory }}
              cpu: {{ .Values.replicationJob.resources.requests.cpu }}
            limits:
              memory: {{ .Values.replicationJob.resources.limits.memory }}
              cpu: {{ .Values.replicationJob.resources.limits.cpu }}
          {{- end }}
          volumeMounts:
            - name: replication-storage
              mountPath: {{ .Values.replicationJob.persistenceDisk.mountPath }}
              # subPath: {{ .Values.replicationJob.persistenceDisk.subPath }}
          env:
            - name: POSTGRES_HOST
              value: {{ .Release.Name }}-web-db
            - name: POSTGRES_DB
              value: {{ .Values.webDb.env.POSTGRES_DB }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-web-db-secret
                  key: password
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-web-db-secret
                  key: username
            - name: REPLICATION_FOLDER
              value: /replication/minute
            - name: CLOUDPROVIDER
              value: 'minikube'
            # In case cloudProvider=aws
            #{{- if eq .Values.cloudProvider "aws" }}
            #- name: AWS_S3_BUCKET
            #  value: {{ .Values.AWS_S3_BUCKET }}
            #{{- end }}
              # Memory optimization for osmosis
            {{- if .Values.replicationJob.resources.enabled }}
            - name: MEMORY_JAVACMD_OPTIONS
              value: {{ .Values.replicationJob.resources.requests.memory | default "2Gi" | quote}}
            {{- end }}
      volumes:
        - name: replication-storage
        {{- if .Values.replicationJob.persistenceDisk.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-replication-job-pv-claim
        {{- else }}
          emptyDir: {}
        {{- end }}
{{- end }}