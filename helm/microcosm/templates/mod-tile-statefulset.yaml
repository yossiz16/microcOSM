{{- if .Values.modTile.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-mod-tile
  labels:
    app: {{ template "microcosm.name" . }}
    component: mod-tile-statefulset
    environment: {{ .Values.environment }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.modTile.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "microcosm.name" . }}
      release: {{ .Release.Name }}
      run: {{ .Release.Name }}-mod-tile
  serviceName: {{ .Release.Name }}-mod-tile
  template:
    metadata:
      labels:
        app: {{ template "microcosm.name" . }}
        release: {{ .Release.Name }}
        run: {{ .Release.Name }}-mod-tile
    spec:
      containers:
        - name: {{ .Chart.Name }}-mod-tile
          {{- if eq .Values.cloudProvider "aws" }} 
          image: "{{ .Values.modTile.image.aws }}"
          {{- end }}
          {{- if eq .Values.cloudProvider "minikube" }} 
          image: "{{ .Values.modTile.image.minikube }}"
          {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 80
            {{- if eq .Values.cloudProvider "aws" }} 
            initialDelaySeconds: 600 # 10 min, because the compile process takes time.
            {{- end }}
            {{- if eq .Values.cloudProvider "minikube" }} 
            initialDelaySeconds: 1200 # can take longer in local env with few resources.
            {{- end }}
            timeoutSeconds: 30
            {{- if .Values.modTile.resources.enabled }}
          resources:
            requests:
              memory: {{ .Values.modTile.resources.requests.memory }}
              cpu: {{ .Values.modTile.resources.requests.cpu }}
            limits:
              memory: {{ .Values.modTile.resources.limits.memory }}
              cpu: {{ .Values.modTile.resources.limits.cpu }}
          {{- end }}
          env:
              # tiler-db env variables
            - name: POSTGRES_HOST
              value: {{ .Release.Name }}-rasterized-tiles-db
            - name: POSTGRES_DB
              value: {{ .Values.rasterizedTilesDb.env.POSTGRES_DB }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-rasterized-tiles-db-secret
                  key: password  
            - name: POSTGRES_PORT
              value: {{ quote .Values.rasterizedTilesDb.env.POSTGRES_PORT }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-rasterized-tiles-db-secret
                  key: username       
            - name: POSTGRES_PORT
              value: {{ .Values.rasterizedTilesDb.env.POSTGRES_PORT | quote }}
            - name: EXPIRED_DIR
              value: {{ .Values.modTile.env.EXPIRED_DIRECTORY }}
            - name: RENDER_EXPIRED_TILES_INTERVAL
              value: {{ quote .Values.osm2pgsql.env.UPDATE_INTERVAL }}
          volumeMounts:
          - mountPath: {{ .Values.modTile.persistenceDisk.mountPath }}
            name: mod-tile-tile-cache
            subPath: {{ .Values.modTile.persistenceDisk.subPath }}
          - mountPath: {{ .Values.modTile.env.EXPIRED_DIRECTORY }}
            name: expired-storage
            # subPath: {{ .Values.osm2pgsql.persistenceDisk.subPath }}
      restartPolicy: Always
      volumes:
        - name: mod-tile-tile-cache
        {{- if .Values.modTile.persistenceDisk.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-mod-tile-pv-claim
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: expired-storage
        {{- if .Values.osm2pgsql.persistenceDisk.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-osm2pgsql-expired-pv-claim
        {{- else }}
          emptyDir: {}
        {{- end }}
{{- end }}